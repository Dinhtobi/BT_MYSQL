
DROP TABLE IF EXISTS User;

CREATE TABLE User (
  ID INT PRIMARY KEY AUTO_INCREMENT
  , NAME VARCHAR(255)
  , EMAIL VARCHAR(50)
  , PASSWORD TEXT
  , CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP
  , UPDATED_AT DATETIME DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS `ROLE`;

CREATE TABLE `ROLE` (
  ID INT PRIMARY KEY AUTO_INCREMENT
  , NAME varchar(15)
  );
  
DROP TABLE IF EXISTS USER_ROLE;

CREATE TABLE USER_ROLE(
	 user_id INT
	,  role_id INT
	, CONSTRAINT user_id foreign key (user_id) references User(ID)
	, CONSTRAINT role_id foreign key (role_id) references ROLE(ID)
);

DROP TABLE IF EXISTS CATEGORY;

CREATE TABLE CATEGORY(
	 ID INT PRIMARY KEY AUTO_INCREMENT
  , NAME VARCHAR(255)
  , CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP
  , UPDATED_AT DATETIME DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS PRODUCT;

CREATE TABLE PRODUCT(
	 ID INT PRIMARY KEY AUTO_INCREMENT
  , NAME VARCHAR(255)
  , PRICE INT
  , NUMBER INT
  , category_id INT
  , CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP
  , UPDATED_AT DATETIME DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP
  , CONSTRAINT category_product foreign key (category_id) references CATEGORY(ID)
);


DROP TABLE IF EXISTS RefreshToken;

CREATE TABLE RefreshToken (
  ID INT PRIMARY KEY AUTO_INCREMENT
  , token text
  , expiration DATETIME DEFAULT CURRENT_TIMESTAMP
  , user_id INT
  , CONSTRAINT user_token foreign key (user_id) references User(ID)
);
